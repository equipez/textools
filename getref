#!/bin/bash
# Usage: getbib BIB_ENTRY_ID|REFERENCE_TITLE [BIB_FILE_NAME]
# getref tries downloading a reference according to the given bib entry id or title and name it as
# $BIB_ENTRY_ID-$REFERENCE_TITLE or $REFERENCE_TITLE according to the availability of $BIB_ENTRY_ID.
# According to $BIB_FILE_NAME, we decide $REFERENCE_TITLE by $BIB_ENTRY_ID or vice versa.

BIBENTRYID=""
REFTITLE=""
BIBFILE=""

# Parse the arguments
if [[ $# -eq 1 ]]; then
    BIBENTRYID=$1
elif [[ $# -eq 2 ]]; then
    BIBENTRYID=$1
    BIBFILE=$2
else
    printf "Usage: getbib BIB_ENTRY_ID|REFERENCE_TITLE [BIB_FILE_NAME]\n"
    exit -1
fi

# Decide whether the $BIBENTRYID recorded above is indeed $REFTITLE.
if echo "$BIBENTRYID" | grep '[^a-zA-Z0-9_]' || ! echo "$BIBENTRYID" | grep -q '[a-z]' \
    || ! echo "$BIBENTRYID" | grep -q '[A-Z]' || ! echo "$BIBENTRYID" | grep -q '[0-9]'; then
    REFTITLE="$BIBENTRYID"
    BIBENTRYID=""
fi

# Decide bib files to check
if ! [[ -z $BIBFILE ]]; then
    BIBFILES="$BIBFILE"
else
    BIBFILES=`ls -t *.bib`
fi

# Decide $REFERENCE_TITLE by $BIB_ENTRY_ID or vice versa.
if ! [[ -z "$BIBENTRYID" ]]; then
    for FILE in "$BIBFILES"; do
        cat $FILE | sed 's/^\s*%//'
    done
elif ! [[ -z "$REFTITLE" ]]; then

fi
