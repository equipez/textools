#!/bin/bash
# Usage: getbib BIB_ENTRY_ID|REFERENCE_TITLE [BIB_FILE_NAME]
# getref tries downloading a reference according to the given bib entry id or title and name it as
# $BIB_ENTRY_ID-$REFERENCE_TITLE or $REFERENCE_TITLE according to the availability of $BIB_ENTRY_ID.
# According to $BIB_FILE_NAME, we decide $REFERENCE_TITLE by $BIB_ENTRY_ID or vice versa.

BIBENTRYID=""
REFTITLE=""
BIBFILE=""

# Parse the arguments
if [[ $# -eq 1 ]]; then
    BIBENTRYID=$1
elif [[ $# -eq 2 ]]; then
    BIBENTRYID=$1
    BIBFILE=$2
else
    printf "Usage: getbib BIB_ENTRY_ID|REFERENCE_TITLE [BIB_FILE_NAME]\n"
    exit -1
fi

echo $REFTITLE
echo $BIBENTRYID

# Decide whether the $BIBENTRYID recorded above is indeed $REFTITLE.
if echo "$BIBENTRYID" | grep '[^a-zA-Z0-9_]' || ! echo "$BIBENTRYID" | grep -q '[a-z]' \
    || ! echo "$BIBENTRYID" | grep -q '[A-Z]' || ! echo "$BIBENTRYID" | grep -q '[0-9]'; then
    REFTITLE="$BIBENTRYID"
    BIBENTRYID=""
fi

echo $REFTITLE
echo $BIBENTRYID

# Decide bib files to check
if ! [[ -z $BIBFILE ]]; then
    BIBFILES="$BIBFILE"
else
    BIBFILES=`ls -t *.bib`
fi


# Decide $REFERENCE_TITLE by $BIB_ENTRY_ID or vice versa.
LINEBREAKER="======LINE_BREAK++++++"
if ! [[ -z "$BIBENTRYID" ]]; then
    for FILE in $BIBFILES; do
        REFTITLE=$(sed '/^\s*%/d' $FILE \
            | sed 's/%.*$//' \
            | awk -v ORS="$LINEBREAKER" 1 \
            | sed "s/$LINEBREAKER\s*@/$LINEBREAKER\n@/g" \
            | grep "^@.*{\s*$BIBENTRYID\s*," | head -1 \
            | sed  "s/^.*$LINEBREAKER\s*title\s*=\s*{//" \
            | sed -r "s/},\s*$LINEBREAKER.*}\s*[$LINEBREAKER]+\s*$//" \
            | sed 's/\$//g' \
            | sed 's/\\//g' \
            | sed 's/{//g' \
            | sed 's/}//g' \
            | sed 's/^\s*//' \
            | sed 's/\s*$//' \
            )
        if ! [[ -z "$REFTITLE" ]]; then
            break
        fi
    done
    if [[ -z "$REFTITLE" ]]; then
        printf "\nThe bib entry id does not exist in the bib files(s).\n\n"
        exit -2
    fi
    REFTITLE_UNDERSCORED=$(echo "$REFTITLE" | sed -r 's/[^a-zA-Z0-9]+/_/g')
elif ! [[ -z "$REFTITLE" ]]; then
    REFTITLE=$(echo "$REFTITLE" | sed 's/\$//g' \
        | sed 's/\\//g' \
        | sed 's/{//g' \
        | sed 's/}//g' \
        | sed 's/^\s*//' \
        | sed 's/\s*$//' \
        )
    REFTITLE_UNDERSCORED=$(echo "$REFTITLE" | sed -r 's/[^a-zA-Z0-9]+/_/g')
    for FILE in $BIBFILES; do
        BIBENTRYID=$(sed '/^\s*%/d' $FILE \
            | sed 's/%.*$//' \
            | awk -v ORS="$LINEBREAKER" 1 \
            | sed "s/$LINEBREAKER\s*@/$LINEBREAKER\n@/g" \
            | sed "s/{\s*/{/g" \
            | sed "s/\s*}/}/g" \
            | sed "s/\s*=\s*/=/g" \
            | sed -r 's/[^a-zA-Z0-9={}]+/_/g' \
            | grep -i -r "\s*+title={$REFTITLE_UNDERSCORED}" | head -1 \
            | sed "s/^@[^{]*{//" \
            | sed "s/,\s*$LINEBREAKER.*}\s*$LINEBREAKER$//" \
            | sed 's/^\s*//' \
            | sed 's/\s*$//' \
            )
        if ! [[ -z "$BIBENTRYID" ]]; then
            break
        fi
    done
    if [[ -z "$BIBENTRYID" ]]; then
        printf "\nThe title does not exist in the bib files(s).\n\n"
    fi

else
    printf "\nNo bib entry id or reference title received.\n\n"
fi


REFFILENAME="$BIBENTRYID"-"$REFTITLE_UNDERSCORED"
